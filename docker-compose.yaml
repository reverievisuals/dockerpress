version: '3.9'
services:

  # Database
  mysql:
    image: mariadb:latest
    container_name: ${APP_NAME}-mysql
    restart: always
    ports:
      - '3306:3306'
    networks:
      - backend
    command: --lower_case_table_names=2
    volumes:
      - ./db-data:/var/lib/mysql:delegated
    environment:
      MYSQL_DATABASE: ${DB_NAME}
      MYSQL_USER: ${DB_USER}
      MYSQL_PASSWORD: ${DB_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}

  # phpMyAdmin
  pma:
    image: phpmyadmin:latest
    container_name: ${APP_NAME}-phpmyadmin
    restart: always
    ports:
      - "8080:80"
    networks:
      - backend
      - frontend
    environment:
      PMA_HOST: mysql
      PMA_PORT: 3306
    depends_on:
      - mysql

  # Wordpress
  wordpress:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: ${APP_NAME}-wordpress
    restart: always
    ports:
      - "8000:80"
    networks:
      - backend
      - frontend
    volumes:
      - ./wp-content:/var/www/html/wp-content:rw,cached
      - ./config/php.ini:/usr/local/etc/php/conf.d/php.ini
    environment:
      SMTP_HOSTNAME: mailhog
      SMTP_PORT: "1025"
      SMTP_FROM: no-reply@mailhog.lo
      SMTP_FROM_NAME: MailHog
      WORDPRESS_DB_HOST: mysql:3306
      WORDPRESS_DB_NAME: ${DB_NAME}
      WORDPRESS_DB_USER: ${DB_USER}
      WORDPRESS_DB_PASSWORD: ${DB_PASSWORD}
      WORDPRESS_CONFIG_EXTRA: |
        // Update settings
        // Disable all core updates
        define( 'WP_AUTO_UPDATE_CORE', false );
        // Disable auto updates
        define( 'AUTOMATIC_UPDATER_DISABLED', true );
        # // Multisite
        # define( 'WP_ALLOW_MULTISITE', true );
        # define( 'MULTISITE', true );
        # define( 'SUBDOMAIN_INSTALL', false );
        # // TODO: change to actual domain when deploying
        # define( 'DOMAIN_CURRENT_SITE', 'localhost' );
        # define( 'PATH_CURRENT_SITE', '/' );
        # define( 'SITE_ID_CURRENT_SITE', 1 );
        # define( 'BLOG_ID_CURRENT_SITE', 1 );
        // SMTP Settings
        require_once( ABSPATH .'wp-includes/plugin.php' );
        add_action( 'phpmailer_init', 'mail_smtp' );
        function mail_smtp( $$phpmailer ) {
          $$phpmailer->isSMTP();
          $$phpmailer->Host = getenv('SMTP_HOSTNAME');
          $$phpmailer->Port = getenv('SMTP_PORT');
          $$phpmailer->From = getenv('SMTP_FROM');
          $$phpmailer->FromName = getenv('SMTP_FROM_NAME');

          // Filter out client message body and output debug info to the logs
          // NOTE: Log level must be set to '2' or higher in order for the filter to work
          $$phpmailer->SMTPDebug = 2;

          $$phpmailer->Debugoutput = function($$str) {
            static $$logging = true;
            if ($$logging === false && strpos($$str, 'SERVER -> CLIENT') !== false) {
              $$logging = true;
            }
            if ($$logging) {
              error_log("SMTP " . "$$str");
            }
            if (strpos($$str, 'SERVER -> CLIENT: 354') !== false) {
              $$logging = false;
            }
          };
        }
        // Prevent Wordpress from overriding the SMTP FROM address (Office 365 compatibility)
        add_filter( 'wp_mail_from', function( $$email ) {
            return $$_ENV["SMTP_FROM"];
        });
    depends_on:
      - mysql
  # MailHog
  mailhog:
    image: mailhog/mailhog:latest
    container_name: myapp-mailhog
    restart: always
    ports:
      - "1025:1025" # SMTP server
      - "8025:8025" # Web UI
    networks:
      - backend
      - frontend
    logging:
      driver: 'none' # Disable saving logs

networks:
  backend:
  frontend:
